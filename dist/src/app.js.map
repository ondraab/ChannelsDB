{"version":3,"sources":["../../src/app.js"],"names":["Object","defineProperty","exports","value","polymer_element_js_1","require","ChannelsDBPlugin","arguments","shortResidueNames","ALA","ARG","ASN","ASP","CYS","GLN","GLU","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL","channel","backbone","residueLining","Layers","map","x","Residues","union","concat","apply","result","filter","Backbone","SideChain","liningResiduesString","lining","uniqueResidues","distinctBy","i","length","name","getShortResidueName","key","substring","residue","r","console","log","data","elements","v","k","push","PolymerElement","window","customElements","define"],"mappings":"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","file":"app.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst polymer_element_js_1 = require(\"@polymer/polymer/polymer-element.js\");\r\nrequire(\"bootstrap/dist/css/bootstrap.css\");\r\nclass ChannelsDBPlugin extends polymer_element_js_1.PolymerElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.shortResidueNames = {\r\n            ALA: \"A\",\r\n            ARG: \"R\",\r\n            ASN: \"N\",\r\n            ASP: \"D\",\r\n            CYS: \"C\",\r\n            GLN: \"Q\",\r\n            GLU: \"E\",\r\n            HIS: \"H\",\r\n            ILE: \"I\",\r\n            LEU: \"L\",\r\n            LYS: \"K\",\r\n            MET: \"M\",\r\n            PHE: \"F\",\r\n            PRO: \"P\",\r\n            SER: \"S\",\r\n            THR: \"T\",\r\n            TRP: \"W\",\r\n            TYR: \"Y\",\r\n            VAL: \"V\",\r\n        };\r\n    }\r\n    calculateLining(channel, backbone) {\r\n        let residueLining = channel.Layers.map(function (x) {\r\n            return x.Residues;\r\n        });\r\n        let union = [].concat.apply([], residueLining);\r\n        let result = [];\r\n        if (backbone) {\r\n            result = union.filter(function (x) { return x.Backbone; });\r\n        }\r\n        else {\r\n            result = union.filter(function (x) { return x.SideChain; });\r\n        }\r\n        return this.liningResiduesString(result);\r\n    }\r\n    ;\r\n    liningResiduesString(residueLining) {\r\n        let lining = {};\r\n        let result = \"\";\r\n        let uniqueResidues = ChannelsDBPlugin.distinctBy(residueLining, function (x) { return x['SequenceNumber'] + x['Chain']; });\r\n        for (let i = 0; i < uniqueResidues.length; i++) {\r\n            let name = uniqueResidues[i]['Name'];\r\n            let value = this.getShortResidueName(name);\r\n            if (typeof lining[this.getShortResidueName(name)] == 'undefined') {\r\n                lining[this.getShortResidueName(name)] = 1;\r\n            }\r\n            else {\r\n                lining[this.getShortResidueName(name)] = lining[this.getShortResidueName(name)] + 1;\r\n            }\r\n        }\r\n        for (let key in lining) {\r\n            let value = lining[key];\r\n            result = value === 1 ? result + key + '-' : result + value + key + '-';\r\n        }\r\n        return result.substring(0, result.length - 1);\r\n    }\r\n    ;\r\n    getShortResidueName(residue) {\r\n        let r = this.shortResidueNames[name];\r\n        if (!r)\r\n            return name;\r\n        return r;\r\n    }\r\n    ;\r\n    static distinctBy(data, key) {\r\n        let elements = {};\r\n        let result = [];\r\n        for (let v of data) {\r\n            let k = key(v);\r\n            if (!elements[k]) {\r\n                result.push(v);\r\n                elements[k] = true;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    methoda() {\r\n        console.log(this.shortResidueNames);\r\n    }\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        console.log('pica');\r\n    }\r\n}\r\nwindow.customElements.define('channelsdb-plugin', ChannelsDBPlugin);\r\n"]}