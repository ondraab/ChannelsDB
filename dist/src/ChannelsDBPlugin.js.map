{"version":3,"sources":["../../src/ChannelsDBPlugin.js"],"names":["Object","defineProperty","exports","value","polymer_element_js_1","require","d3","ChannelsDBPlugin","arguments","shortResidueNames","ALA","ARG","ASN","ASP","CYS","GLN","GLU","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL","createSubtitle","channels","subtitle","Type","channelsToPlural","channel","backbone","residueLining","Layers","map","x","Residues","union","concat","apply","result","filter","Backbone","SideChain","liningResiduesString","lining","uniqueResidues","distinctBy","i","length","name","getShortResidueName","key","substring","r","channelsJson","minHpthy","medHpthy","maxHpthy","modifiedLayers","dt","t","minColor","g","b","midColor","maxColor","totalWidth","interpolateColor","min","max","target","undefined","ret","formatColor","color","index","l","width","EndDistance","StartDistance","Length","Properties","Hydropathy","push","LayerWrapper","computedWidth","request","XMLHttpRequest","open","pdbId","onload","req","readyState","status","JSON","parse","response","callback","console","error","statusText","channelsList","imgSrc","addChannelsReview","send","ul","document","querySelector","shadowRoot","forEach","wrappedLayers","prepareLayers","mainLi","select","append","mainDiv","text","sumInfoDiv","attr","Number","toFixed","classed","Charge","Name","bodyContent","bottleneck","Bottleneck","MinRadius","calculateLining","layers","layersDiv","layer","singleLayer","LocalMinima","layerInfoDiv","infoUnit","small","infoResidue","residue","SequenceNumber","Chain","log","data","elements","v","k","type","String","reflectToAttribute","notify","html","PolymerElement","window","customElements","define"],"mappings":"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","file":"ChannelsDBPlugin.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst polymer_element_js_1 = require(\"@polymer/polymer/polymer-element.js\");\r\nconst d3 = require(\"d3\");\r\nrequire(\"@polymer/polymer/lib/elements/dom-repeat.js\");\r\nrequire(\"bootstrap/dist/css/bootstrap.css\");\r\nclass ChannelsDBPlugin extends polymer_element_js_1.PolymerElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.shortResidueNames = {\r\n            ALA: \"A\",\r\n            ARG: \"R\",\r\n            ASN: \"N\",\r\n            ASP: \"D\",\r\n            CYS: \"C\",\r\n            GLN: \"Q\",\r\n            GLU: \"E\",\r\n            HIS: \"H\",\r\n            ILE: \"I\",\r\n            LEU: \"L\",\r\n            LYS: \"K\",\r\n            MET: \"M\",\r\n            PHE: \"F\",\r\n            PRO: \"P\",\r\n            SER: \"S\",\r\n            THR: \"T\",\r\n            TRP: \"W\",\r\n            TYR: \"Y\",\r\n            VAL: \"V\",\r\n        };\r\n        this.createSubtitle = function (channels) {\r\n            let subtitle = '';\r\n            switch (channels[0].Type) {\r\n                case 0:\r\n                    subtitle = \"Reviewed\";\r\n                    break;\r\n                case 1:\r\n                    subtitle = \"Transmembrane\";\r\n                    break;\r\n                case 2:\r\n                    subtitle = \"CSA\";\r\n                    break;\r\n                case 3:\r\n                    subtitle = \"Cof actor\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return `${subtitle} ${this.channelsToPlural()}`;\r\n        };\r\n    }\r\n    calculateLining(channel, backbone) {\r\n        let residueLining = channel.Layers.map(((x) => { return x.Residues; }));\r\n        let union = [].concat.apply([], residueLining);\r\n        let result = [];\r\n        if (backbone)\r\n            result = union.filter(function (x) { return x.Backbone; });\r\n        else\r\n            result = union.filter(function (x) { return x.SideChain; });\r\n        return this.liningResiduesString(result);\r\n    }\r\n    ;\r\n    liningResiduesString(residueLining) {\r\n        let lining = {};\r\n        let result = \"\";\r\n        let uniqueResidues = ChannelsDBPlugin.distinctBy(residueLining, function (x) { return x['SequenceNumber'] + x['Chain']; });\r\n        for (let i = 0; i < uniqueResidues.length; i++) {\r\n            let name = uniqueResidues[i]['Name'];\r\n            let value = this.getShortResidueName(name);\r\n            if (typeof lining[this.getShortResidueName(name)] == 'undefined') {\r\n                lining[this.getShortResidueName(name)] = 1;\r\n            }\r\n            else {\r\n                lining[this.getShortResidueName(name)] = lining[this.getShortResidueName(name)] + 1;\r\n            }\r\n        }\r\n        for (let key in lining) {\r\n            let value = lining[key];\r\n            result = value === 1 ? result + key + '-' : result + value + key + '-';\r\n        }\r\n        return result.substring(0, result.length - 1);\r\n    }\r\n    ;\r\n    getShortResidueName(name) {\r\n        let r = this.shortResidueNames[name];\r\n        if (!r)\r\n            return name;\r\n        return r;\r\n    }\r\n    ;\r\n    static distinctBy(data, key) {\r\n        let elements = {};\r\n        let result = [];\r\n        for (let v of data) {\r\n            let k = key(v);\r\n            if (!elements[k]) {\r\n                result.push(v);\r\n                elements[k] = true;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    channelsToPlural() {\r\n        return `channel${this.channelsJson.length > 0 ? 's' : ''}`;\r\n    }\r\n    prepareLayers(channel) {\r\n        const minHpthy = -4.5;\r\n        const medHpthy = 0.0;\r\n        const maxHpthy = 4.5;\r\n        let modifiedLayers = [];\r\n        const dt = 1 / (channel.Layers.length - 1);\r\n        let t = 0;\r\n        const minColor = { r: 255, g: 0, b: 0 };\r\n        const midColor = { r: 255, g: 255, b: 255 };\r\n        const maxColor = { r: 0, g: 0, b: 255 };\r\n        let totalWidth = 0;\r\n        function interpolateColor(min, minColor, max, maxColor, value, target = undefined) {\r\n            let ret = target !== undefined ? target : { r: 0.1, g: 0.1, b: 0.1 };\r\n            let t = (value - min) / (max - min);\r\n            ret.r = (minColor.r + (maxColor.r - minColor.r) * t) | 0;\r\n            ret.g = (minColor.g + (maxColor.g - minColor.g) * t) | 0;\r\n            ret.b = (minColor.b + (maxColor.b - minColor.b) * t) | 0;\r\n            return ret;\r\n        }\r\n        /** Formats Color object into the rgb expression suitable for CSS. **/\r\n        function formatColor(color) {\r\n            return `rgb(${color.r},${color.g},${color.b})`;\r\n        }\r\n        let index = 0;\r\n        for (let l of channel.Layers) {\r\n            let width = 100 * (l.EndDistance - l.StartDistance) / channel.Length;\r\n            t = l.Properties.Hydropathy;\r\n            totalWidth += width;\r\n            let color = t <= 0 ? interpolateColor(minHpthy, minColor, medHpthy, midColor, t) : interpolateColor(medHpthy, midColor, maxHpthy, maxColor, t);\r\n            modifiedLayers.push(new LayerWrapper(width, formatColor(color), l));\r\n        }\r\n        if (!modifiedLayers.length)\r\n            return modifiedLayers;\r\n        modifiedLayers[modifiedLayers.length - 1].computedWidth = modifiedLayers[modifiedLayers.length - 1].computedWidth + 100 - totalWidth - 0.0001;\r\n        return modifiedLayers;\r\n    }\r\n    connectedCallback() {\r\n        const request = new XMLHttpRequest();\r\n        let channels = [];\r\n        request.open('GET', `https://webchem.ncbr.muni.cz/API/ChannelsDB/Component/${this.pdbId}`, true);\r\n        request.onload = function (req) {\r\n            if (request.readyState == 4) {\r\n                if (request.status == 200) {\r\n                    channels = JSON.parse(request.response);\r\n                    callback();\r\n                }\r\n                else {\r\n                    console.error(request.statusText);\r\n                }\r\n            }\r\n        };\r\n        let callback = (() => {\r\n            this.channelsJson = channels;\r\n            ChannelsDBPlugin.channelsList = channels;\r\n            this.subtitle = this.createSubtitle(this.channelsJson);\r\n            this.imgSrc = `https://webchem.ncbr.muni.cz/API/ChannelsDB/Download/${this.pdbId}?type=png`;\r\n            super.connectedCallback();\r\n            this.addChannelsReview();\r\n        });\r\n        request.send(null);\r\n    }\r\n    static get properties() {\r\n        return {\r\n            pdbId: {\r\n                type: String,\r\n                reflectToAttribute: true,\r\n                notify: true,\r\n            }\r\n        };\r\n    }\r\n    static get template() {\r\n        // language=HTML\r\n        return polymer_element_js_1.html `\n            <style>\n                @import url( ../public/style.css )\n            </style>\n            <div class=\"channels-db-header\">\n            <span>\n                <span class=\"channels-db-id\">[[pdbId]] | <small>[[channelsJson.length]] [[subtitle]]</small> &nbsp;&nbsp;&mdash;&nbsp;&nbsp;</span>ChannelsDB\n                <span style=\"float:right;\"><a href=\"https://webchemdev.ncbr.muni.cz/ChannelsDB/detail/[[pdbId]]\">[+ More]</a></span>\n            </span>\n            </div>\n            <div class=\"channels-db-body\">\n                <div class=\"channels-db-left-pane\">\n                    <div class=\"channels-db-thumb channels-db-thumb-src\">\n                        <img src=\"{{imgSrc}}\" style=\"width: 100%\">\n                    </div>\n                </div>\n\n                <div class=\"channels-db-right-pane\">\n                    <!--<div ng-show=\"isError\" class=\"channels-db-right-pane-error\">Error: {{error}}</div>-->\n\n                    <ul class=\"channels-db-list\">\n                        \n                    </ul>\n                </div>\n\n            </div>\n\n            <div class=\"channels-db-footer\">\n                <span class=\"channels-db-powered\">powered by <a target=\"_blank\" href=\"http://mole.chemi.muni.cz\">MOLE 2.5</a></span>\n                <a target=\"_blank\" href=\"http://mole.upol.cz/api/ebi/?action=newjob&pdbid=[[pdbId]]&ignorehet=0&start=auto\">[+ Custom analysis]</a>\n            </div>\n        `;\r\n    }\r\n    addChannelsReview() {\r\n        let ul = document.querySelector('channelsdb-plugin').shadowRoot.querySelector('.channels-db-list');\r\n        this.channelsJson.forEach((channel, index) => {\r\n            let wrappedLayers = this.prepareLayers(channel);\r\n            const mainLi = d3.select(document.querySelector('channelsdb-plugin').shadowRoot.querySelector('.channels-db-list'))\r\n                .append('li');\r\n            const mainDiv = mainLi.append('div');\r\n            mainDiv.append('div').text(`#${index + 1}`);\r\n            const sumInfoDiv = mainDiv.append('div').attr('class', 'hint--bottom');\r\n            sumInfoDiv.append('b').text(`Length: `);\r\n            sumInfoDiv.append('span')\r\n                .attr('data-hint', 'Length of the channel [\\u212b].').text(`${Number(channel.Length).toFixed(1) || 1}\\u212b`);\r\n            sumInfoDiv.append('span').classed('channels-db-delimiter', true).text(' | ');\r\n            sumInfoDiv.append('b').text('HPthy: ');\r\n            sumInfoDiv.append('span').classed('hint--bottom hint--large', true)\r\n                .attr('data--hint', 'Channel\\'s hydropathy is an average hydropathy index assigned to the lining residues according to the Kyte and Doolitle.')\r\n                .text(`${Number(channel.Properties.Hydropathy).toFixed(2) || 2}`);\r\n            sumInfoDiv.append('span').classed('channels-db-delimiter', true).text(' | ');\r\n            sumInfoDiv.append('b').text('Charge: ');\r\n            sumInfoDiv.append('span').classed('hint--bottom hint--large', true)\r\n                .attr('data--hint', 'Charge is calculated as a sum of charged residues (Arg, Lys = +1; Asp, Glu = -1)')\r\n                .text(`${Number(channel.Properties.Charge) > 0 ? '+' : ''}${channel.Properties.Charge}`);\r\n            sumInfoDiv.append('span').text(`${channel.Name}`).attr('style', 'float: right; font-weight: 200;');\r\n            const bodyContent = mainLi.append('div').attr('class', 'channels-db-channel-body')\r\n                .append('div').attr('class', 'channels-db-channel-body-content');\r\n            const bottleneck = bodyContent.append('div').attr('style', 'position: relative');\r\n            bottleneck.append('b').text('Bottleneck: ');\r\n            bottleneck.append('span').attr('class', 'hint--bottom')\r\n                .attr('data-hint', 'Channels\\'s lowest profile: radius / length')\r\n                .text(`${Number(channel.Bottleneck.MinRadius).toFixed(2) || 1} / ${(Number(channel.Bottleneck.EndDistance) - Number(channel.Bottleneck.StartDistance)).toFixed(2)}`);\r\n            bottleneck.append('span').classed('channels-db-delimiter', true).text(' | ');\r\n            bottleneck.append('span').attr('class', 'hint--bottom').attr('data-hint', 'Hydropathy of the bottleneck.')\r\n                .text(`${Number(channel.Bottleneck.Properties.Hydropathy) || 2}`);\r\n            bottleneck.append('span').attr('class', 'hint--bottom').attr('data-hint', 'Formal charge of the bottleneck.')\r\n                .text(`${Number(channel.Properties.Charge) > 0 ? '+' : ''}${channel.Bottleneck.Properties.Charge}`);\r\n            bottleneck.append('span').classed('channels-db-delimiter', true).text(' | ');\r\n            bottleneck.append('span').attr('class', 'hint--bottom').attr('data-hint', 'Bottleneck lining residues.')\r\n                .text(`${this.liningResiduesString(channel.Bottleneck.Residues) || ''}`);\r\n            const lining = bodyContent.append('div');\r\n            lining.append('b').text('Lining: ');\r\n            lining.append('span').attr('class', 'hint--top').attr('data-hint', 'Sidechain lining residues')\r\n                .text(`${this.calculateLining(channel, false) || 'cut:true:200:\\'...\\''}`);\r\n            lining.append('span').classed('channels-db-delimiter', true).text(' | ');\r\n            lining.append('span').attr('class', 'hint--top').attr('data-hint', 'Backbone lining residues')\r\n                .text(`${this.calculateLining(channel, true) || 'cut:true:200:\\'...\\''}`);\r\n            const layers = mainLi.append('div').attr('class', 'channels-db-channel-layers-wrapper');\r\n            layers.append('div').attr('class', 'hint--right hint--large')\r\n                .attr('data-hint', 'The channel is uniformly divided into layers, and each layer is defined by the residues lining it. A new layer starts whenever there is a change in the list of residues lining the channel along its length.')\r\n                .text('Layers');\r\n            const layersDiv = layers.append('div').attr('class', 'channels-db-channel-layers');\r\n            wrappedLayers.forEach((layer, index) => {\r\n                let singleLayer = layersDiv.append('div').attr('style', `width: ${layer.computedWidth}%; background-color: ${layer.color};\n                     border-bottom: ${layer.layer.LocalMinima ? '3px' : '0'} solid ${layer.layer.Bottleneck ? 'black' : '\t#666666;' +\r\n                    'display:inline-block;margin-left:'}${index == 0 ? '0' : '1px'}`);\r\n                let layerInfoDiv = singleLayer.append('div').attr('class', 'channels-db-channel-layer-info');\r\n                let infoUnit = layerInfoDiv.append('div').attr('class', 'channels-db-channel-layer-info-unit')\r\n                    .attr('style', 'left: 0');\r\n                let small = infoUnit.append('div').append('small');\r\n                small.append('b').text('Radius: ');\r\n                small.append(`text`).text(`${Number(layer.layer.MinRadius).toFixed(1) || 1}\\u212b`);\r\n                small = infoUnit.append('div').append('small');\r\n                small.append('b').text('Length: ');\r\n                small.append(`text`).text(`${Number(layer.layer.EndDistance - layer.layer.StartDistance).toFixed(1) || 1}\\u212b`);\r\n                infoUnit = layerInfoDiv.append('div').attr('style', 'left: 111px')\r\n                    .attr('class', 'channels-db-channel-layer-info-unit');\r\n                small = infoUnit.append('div').append('small');\r\n                small.append('b').text('HPthy ');\r\n                small.append(`text`).text(`${Number(layer.layer.Properties.Hydropathy).toFixed(2) || 2}`);\r\n                small = infoUnit.append('div').append('small');\r\n                ``;\r\n                small.append('b').text('Charge: ');\r\n                small.append(`text`).text(`${layer.layer.Properties.Charge > 0 ? '+' : ''}${Number(layer.layer.Properties.Charge).toFixed(1)}`);\r\n                let infoResidue = layerInfoDiv.append('div').attr('class', 'channels-db-channel-layer-info-residues');\r\n                layer.layer.Residues.forEach((residue, index) => {\r\n                    if (residue.Backbone == true) {\r\n                        infoResidue.append('small').append('b').append('span').attr('class', 'hint--top')\r\n                            .attr('data-hint', 'Backbone').text(`${residue.Name} \n                            ${residue.SequenceNumber}${residue.Chain}${layer.layer.Residues.length - 1 == index ? '' : ' \\u2013 '}`);\r\n                    }\r\n                    else {\r\n                        infoResidue.append('small').append('span').attr('class', 'hint--top')\r\n                            .attr('data-hint', 'Backbone').text(`${residue.Name} \n                            ${residue.SequenceNumber}${residue.Chain}${layer.layer.Residues.length - 1 == index ? '' : ' \\u2013 '}`);\r\n                    }\r\n                });\r\n                // infoResidue.append('div').attr('class', 'channels-db-channel-layer-info-bottleneck')\r\n                //     .text('Bottleneck');\r\n                // infoResidue.append('div').attr('class', 'channels-db-channel-layer-info-bottleneck')\r\n                //     .text('Local minimum');\r\n                layerInfoDiv.append('div').attr('style', `background: ${layer.color}`);\r\n            });\r\n            // const li = document.createElement('li');\r\n            // const mainDiv = document.createElement('div');\r\n            // const numberDiv = document.createElement('div');\r\n            // numberDiv.innerHTML += `#${index + 1}`;\r\n            // mainDiv.appendChild(numberDiv);\r\n            //\r\n            //\r\n            // const infoDiv = document.createElement('div');\r\n            // infoDiv.innerHTML = `<div>\r\n            //                         <b>\r\n            // \t\t\t<span class=\"hint--bottom\" data-hint=\"Length of the channel [&#8491;].\">\r\n            // \t\t\t\tLength:\r\n            // \t\t\t</span>\r\n            //                         </b>\r\n            //\r\n            //                         ${channel.Length || 1}&#8491;\r\n            //\r\n            //                         <span class=\"channels-db-delimiter\">|</span>\r\n            //\r\n            //                         <b>\r\n            // \t\t\t<span class=\"hint--bottom hint--large\" data-hint=\"Channel's hydropathy is an average hydropathy index assigned to the lining residues according to the Kyte and Doolitle.\">\r\n            // \t\t\t\tHPthy:\r\n            // \t\t\t</span>\r\n            //                         </b>\r\n            //                         ${channel.Properties.Hydropathy || 2}\r\n            //\r\n            //                         <span class=\"channels-db-delimiter\">|</span>\r\n            //                         <b>\r\n            // \t\t\t<span class=\"hint--bottom hint--large\" data-hint=\"Charge is calculated as a sum of charged residues (Arg, Lys = +1; Asp, Glu = -1)\">\r\n            // \t\t\t\tCharge:\r\n            // \t\t\t</span>\r\n            //                         </b>\r\n            //                         ${channel.Properties.Charge > 0? '+': ''}${channel.Properties.Charge}\r\n            //                         <span style=\"float: right; font-weight: 200;\">${channel.Name}</span>\r\n            //                     </div>`;\r\n            //\r\n            //\r\n            // const channelBodyDiv = document.createElement('div');\r\n            // channelBodyDiv.setAttribute('class', 'channels-db-channel-body');\r\n            //\r\n            // channelBodyDiv.innerHTML += `\r\n            //     <div class=\"channels-db-channel-body-content\">\r\n            //         <div style=\"position: relative; display: inline-block\">\r\n            //                                     <b>\r\n            //                 Bottleneck:\r\n            //                 </b>\r\n            //             <span class=\"hint--bottom\" data-hint=\"Channels's lowest profile: radius / length\">\r\n            //                 ${Number(channel.Bottleneck.MinRadius).toFixed(2) || 1} / ${Number(channel.Bottleneck.EndDistance - channel.Bottleneck.StartDistance).toFixed(2) || 1}\r\n            //             </span>\r\n            //             <span class=\"channels-db-delimiter\">|</span>\r\n            //                             <span class=\"hint--bottom\" data-hint=\"Hydropathy of the bottleneck.\">\r\n            // \t\t\t\t${Number(channel.Bottleneck.Properties.Hydropathy).toFixed(2) || 2}\r\n            // \t\t\t</span>\r\n            //                             <span class=\"channels-db-delimiter\">|</span>\r\n            //                             <span class=\"hint--bottom\" data-hint=\"Formal charge of the bottleneck.\">\r\n            // \t\t\t\t${Number(channel.Properties.Charge) > 0 ? '+': ''} ${Number(channel.Bottleneck.Properties.Charge).toFixed(2)}\r\n            // \t\t\t</span>\r\n            //                             <span class=\"channels-db-delimiter\">|</span>\r\n            //                             <span class=\"hint--bottom\" data-hint=\"Bottleneck lining residues.\">\r\n            // \t\t\t\t${this.liningResiduesString(channel.Bottleneck.Residues) || 'cut:true:10:\\' ...\\''}\r\n            // \t\t\t</span>\r\n            //         </div>\r\n            //     </div>\r\n            // `;\r\n            //\r\n            // const layersDiv = document.createElement('div');\r\n            // layersDiv.setAttribute('class', 'channels-db-channel-layers');\r\n            // layersDiv.innerHTML = `\r\n            //                     <div class=\"hint--right hint--large\" data-hint=\"The channel is uniformly divided into layers, and each layer is defined by the residues lining it. A new layer starts whenever there is a change in the list of residues lining the channel along its length.\">\r\n            //                         Layers\r\n            //                     </div>\r\n            //\r\n            //                     <div class=\"channels-db-channel-layers\">\r\n            //                         <!--<div ng-repeat=\"layer in channel.wrappedLayers\"-->\r\n            //                              style=\"width: {{ layer.computedWidth }}%; background-color:{{ layer.color }};\r\n            // \t\t\t\t\t border-bottom: {{layer.layer.LocalMinima ? '3px' : '0'}} solid {{layer.layer.Bottleneck ? 'black' : '\t#666666'}}\">\r\n            //\r\n            //                             <div class=\"channels-db-channel-layer-info\">\r\n            //                                 <div style=\"left: 0;\" class=\"channels-db-channel-layer-info-unit\">\r\n            //                                     <div><small><b>Radius:</b> {{layer.layer.MinRadius | number: 1}}&#8491;</small></div>\r\n            //                                     <div><small><b>Length:</b> {{layer.layer.EndDistance - layer.layer.StartDistance | number: 1}}&#8491;</small></div>\r\n            //                                 </div>\r\n            //                                 <div style=\"left: 96px;\" class=\"channels-db-channel-layer-info-unit\">\r\n            //                                     <div><small><b>Hpthy:</b> {{layer.layer.Properties.Hydropathy | number: 2}}</small></div>\r\n            //                                     <div><small><b>Charge:</b> {{layer.layer.Properties.Charge > 0? '+': ''}}{{layer.layer.Properties.Charge}}</small></div>\r\n            //                                 </div>\r\n            //                                 <div class=\"channels-db-channel-layer-info-residues\">\r\n            // \t\t\t\t\t<!--<span ng-repeat=\"residue in layer.layer.Residues\">-->\r\n            // \t\t\t\t\t\t<!--\r\n            // \t\t\t\t\t\t-->\r\n            // \t\t\t\t\t\t<!--<small ng-if=\"residue.Backbone\">-->\r\n            // \t\t\t\t\t\t\t<!--\r\n            // \t\t\t\t\t\t\t-->\r\n            // \t\t\t\t\t\t\t<b>\r\n            // \t\t\t\t\t\t\t\t<!--\r\n            // \t\t\t\t\t\t\t\t-->\r\n            // \t\t\t\t\t\t\t\t<span class=\"hint--top\" data-hint=\"Backbone\">\r\n            // \t\t\t\t\t\t\t\t\t<!--\r\n            // \t\t\t\t\t\t\t\t\t-->\r\n            // \t\t\t\t\t\t\t\t\t{{residue.Name}} {{residue.SequenceNumber}}{{residue.Chain}}{{$last? '' : ' &ndash; '}}\r\n            //                                         <!--\r\n            //                                         -->\r\n            // \t\t\t\t\t\t\t\t</span>\r\n            //                                     <!--\r\n            //                                     -->\r\n            // \t\t\t\t\t\t\t</b>\r\n            //                                 <!--\r\n            //                                 -->\r\n            // \t\t\t\t\t\t</small>\r\n            //                             <!--\r\n            //                             -->\r\n            // \t\t\t\t\t\t<!--<small ng-if=\"!residue.Backbone\">{{residue.Name}} {{residue.SequenceNumber}}{{residue.Chain}}{{$last? '' : ' &ndash; '}}</small>-->\r\n            //                             <!--\r\n            //                             -->\r\n            // \t\t\t\t\t</span>\r\n            //                                     <!--<div ng-show=\"{{layer.layer.Bottleneck}}\" class=\"channels-db-channel-layer-info-bottleneck\">Bottleneck</div>-->\r\n            //                                     <!--<div ng-show=\"{{layer.layer.LocalMinima && !layer.layer.Bottleneck}}\" class=\"channels-db-channel-layer-info-bottleneck\">Local minimum</div>-->\r\n            //                                 </div>\r\n            //                                 <div style=\"background: {{ layer.color }}\"></div>\r\n            //                             </div>\r\n            //\r\n            // </div>`\r\n            // mainDiv.appendChild(infoDiv);\r\n            // mainDiv.appendChild(channelBodyDiv);\r\n            // // mainDiv.appendChild(layersDiv);\r\n            // li.appendChild(mainDiv);\r\n            //\r\n            // ul.appendChild(li);\r\n        });\r\n        // ul.appendChild(document.createElement('li'));\r\n        console.log();\r\n    }\r\n}\r\nclass LayerWrapper {\r\n    constructor(computedWidth, color, layer) {\r\n        this.computedWidth = computedWidth;\r\n        this.color = color;\r\n        this.layer = layer;\r\n    }\r\n}\r\nexports.LayerWrapper = LayerWrapper;\r\nwindow.customElements.define('channelsdb-plugin', ChannelsDBPlugin);\r\n"]}