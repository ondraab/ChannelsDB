{"version":3,"sources":["../../src/ChannelsDBPlugin.js"],"names":["Object","defineProperty","exports","value","polymer_element_js_1","require","ChannelsDBPlugin","arguments","shortResidueNames","ALA","ARG","ASN","ASP","CYS","GLN","GLU","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL","createSubtitle","channels","subtitle","Type","channelsToPlural","channel","backbone","residueLining","Layers","map","x","Residues","union","concat","apply","result","filter","Backbone","SideChain","liningResiduesString","lining","uniqueResidues","distinctBy","i","length","name","getShortResidueName","key","substring","r","channelsJson","request","XMLHttpRequest","open","pdbId","onload","req","readyState","status","JSON","parse","response","callback","console","error","statusText","channelsList","imgSrc","send","data","elements","v","k","push","html","type","String","reflectToAttribute","notify","PolymerElement","LayerWrapper","computedWidth","color","layer","window","customElements","define"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AACAA,OAAOC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C,EAAEC,OAAO,IAAT,EAA7C;AACA,IAAMC,uBAAuBC,QAAQ,qCAAR,CAA7B;AACAA,QAAQ,6CAAR;AACAA,QAAQ,kCAAR;;IACMC,gB;;;AACF,gCAAc;AAAA;;AAAA,yIACDC,SADC;;AAEV,cAAKC,iBAAL,GAAyB;AACrBC,iBAAK,GADgB;AAErBC,iBAAK,GAFgB;AAGrBC,iBAAK,GAHgB;AAIrBC,iBAAK,GAJgB;AAKrBC,iBAAK,GALgB;AAMrBC,iBAAK,GANgB;AAOrBC,iBAAK,GAPgB;AAQrBC,iBAAK,GARgB;AASrBC,iBAAK,GATgB;AAUrBC,iBAAK,GAVgB;AAWrBC,iBAAK,GAXgB;AAYrBC,iBAAK,GAZgB;AAarBC,iBAAK,GAbgB;AAcrBC,iBAAK,GAdgB;AAerBC,iBAAK,GAfgB;AAgBrBC,iBAAK,GAhBgB;AAiBrBC,iBAAK,GAjBgB;AAkBrBC,iBAAK,GAlBgB;AAmBrBC,iBAAK;AAnBgB,SAAzB;AAqBA,cAAKC,cAAL,GAAsB,UAAUC,QAAV,EAAoB;AACtC,gBAAIC,WAAW,EAAf;AACA,oBAAQD,SAAS,CAAT,EAAYE,IAApB;AACI,qBAAK,CAAL;AACID,+BAAW,UAAX;AACA;AACJ,qBAAK,CAAL;AACIA,+BAAW,eAAX;AACA;AACJ,qBAAK,CAAL;AACIA,+BAAW,KAAX;AACA;AACJ,qBAAK,CAAL;AACIA,+BAAW,WAAX;AACA;AACJ;AACI;AAdR;AAgBA,mBAAUA,QAAV,SAAsB,KAAKE,gBAAL,EAAtB;AACH,SAnBD;AAvBU;AA2Cb;;;;wCACeC,O,EAASC,Q,EAAU;AAC/B,gBAAIC,gBAAgBF,QAAQG,MAAR,CAAeC,GAAf,CAAoB,UAACC,CAAD,EAAO;AAAE,uBAAOA,EAAEC,QAAT;AAAoB,aAAjD,CAApB;AACA,gBAAIC,QAAQ,GAAGC,MAAH,CAAUC,KAAV,CAAgB,EAAhB,EAAoBP,aAApB,CAAZ;AACA,gBAAIQ,SAAS,EAAb;AACA,gBAAIT,QAAJ,EACIS,SAASH,MAAMI,MAAN,CAAa,UAAUN,CAAV,EAAa;AAAE,uBAAOA,EAAEO,QAAT;AAAoB,aAAhD,CAAT,CADJ,KAGIF,SAASH,MAAMI,MAAN,CAAa,UAAUN,CAAV,EAAa;AAAE,uBAAOA,EAAEQ,SAAT;AAAqB,aAAjD,CAAT;AACJ,mBAAO,KAAKC,oBAAL,CAA0BJ,MAA1B,CAAP;AACH;;;6CAEoBR,a,EAAe;AAChC,gBAAIa,SAAS,EAAb;AACA,gBAAIL,SAAS,EAAb;AACA,gBAAIM,iBAAiB3C,iBAAiB4C,UAAjB,CAA4Bf,aAA5B,EAA2C,UAAUG,CAAV,EAAa;AAAE,uBAAOA,EAAE,gBAAF,IAAsBA,EAAE,OAAF,CAA7B;AAA0C,aAApG,CAArB;AACA,iBAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAIF,eAAeG,MAAnC,EAA2CD,GAA3C,EAAgD;AAC5C,oBAAIE,OAAOJ,eAAeE,CAAf,EAAkB,MAAlB,CAAX;AACA,oBAAIhD,QAAQ,KAAKmD,mBAAL,CAAyBD,IAAzB,CAAZ;AACA,oBAAI,OAAOL,OAAO,KAAKM,mBAAL,CAAyBD,IAAzB,CAAP,CAAP,IAAiD,WAArD,EAAkE;AAC9DL,2BAAO,KAAKM,mBAAL,CAAyBD,IAAzB,CAAP,IAAyC,CAAzC;AACH,iBAFD,MAGK;AACDL,2BAAO,KAAKM,mBAAL,CAAyBD,IAAzB,CAAP,IAAyCL,OAAO,KAAKM,mBAAL,CAAyBD,IAAzB,CAAP,IAAyC,CAAlF;AACH;AACJ;AACD,iBAAK,IAAIE,GAAT,IAAgBP,MAAhB,EAAwB;AACpB,oBAAI7C,SAAQ6C,OAAOO,GAAP,CAAZ;AACAZ,yBAASxC,WAAU,CAAV,GAAcwC,SAASY,GAAT,GAAe,GAA7B,GAAmCZ,SAASxC,MAAT,GAAiBoD,GAAjB,GAAuB,GAAnE;AACH;AACD,mBAAOZ,OAAOa,SAAP,CAAiB,CAAjB,EAAoBb,OAAOS,MAAP,GAAgB,CAApC,CAAP;AACH;;;4CAEmBC,I,EAAM;AACtB,gBAAII,IAAI,KAAKjD,iBAAL,CAAuB6C,IAAvB,CAAR;AACA,gBAAI,CAACI,CAAL,EACI,OAAOJ,IAAP;AACJ,mBAAOI,CAAP;AACH;;;2CAckB;AACf,gCAAiB,KAAKC,YAAL,CAAkBN,MAAlB,GAA2B,CAA3B,GAA+B,GAA/B,GAAqC,EAAtD;AACH;;;4CACmB;AAAA;;AAChB,gBAAMO,UAAU,IAAIC,cAAJ,EAAhB;AACA,gBAAI/B,WAAW,EAAf;AACA8B,oBAAQE,IAAR,CAAa,KAAb,6DAA6E,KAAKC,KAAlF,EAA2F,IAA3F;AACAH,oBAAQI,MAAR,GAAiB,UAAUC,GAAV,EAAe;AAC5B,oBAAIL,QAAQM,UAAR,IAAsB,CAA1B,EAA6B;AACzB,wBAAIN,QAAQO,MAAR,IAAkB,GAAtB,EAA2B;AACvBrC,mCAAWsC,KAAKC,KAAL,CAAWT,QAAQU,QAAnB,CAAX;AACAC;AACH,qBAHD,MAIK;AACDC,gCAAQC,KAAR,CAAcb,QAAQc,UAAtB;AACH;AACJ;AACJ,aAVD;AAWA,gBAAIH,WAAY,SAAZA,QAAY,GAAM;AAClB,uBAAKZ,YAAL,GAAoB7B,QAApB;AACAvB,iCAAiBoE,YAAjB,GAAgC7C,QAAhC;AACA,uBAAKC,QAAL,GAAgB,OAAKF,cAAL,CAAoB,OAAK8B,YAAzB,CAAhB;AACA,uBAAKiB,MAAL,6DAAsE,OAAKb,KAA3E;AACA;AACH,aAND;AAOAH,oBAAQiB,IAAR,CAAa,IAAb;AACH;;;mCAtCiBC,I,EAAMtB,G,EAAK;AACzB,gBAAIuB,WAAW,EAAf;AACA,gBAAInC,SAAS,EAAb;AAFyB;AAAA;AAAA;;AAAA;AAGzB,qCAAckC,IAAd,8HAAoB;AAAA,wBAAXE,CAAW;;AAChB,wBAAIC,IAAIzB,IAAIwB,CAAJ,CAAR;AACA,wBAAI,CAACD,SAASE,CAAT,CAAL,EAAkB;AACdrC,+BAAOsC,IAAP,CAAYF,CAAZ;AACAD,iCAASE,CAAT,IAAc,IAAd;AACH;AACJ;AATwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUzB,mBAAOrC,MAAP;AACH;;;4BA4B6B;AAC1B,mBAAOvC,qBAAqB8E,IAA5B;AAqIH;;;4BACuB;AACpB,mBAAO;AACHpB,uBAAO;AACHqB,0BAAMC,MADH;AAEHC,wCAAoB,IAFjB;AAGHC,4BAAQ;AAHL;AADJ,aAAP;AAOH;;;4BACqB;AAClB;AACA,mBAAOlF,qBAAqB8E,IAA5B;AAqKH;;;;EAlb0B9E,qBAAqBmF,c;;IAob9CC,Y,GACF,sBAAYC,aAAZ,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;AAAA;;AACrC,SAAKF,aAAL,GAAqBA,aAArB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH,C;;AAELzF,QAAQsF,YAAR,GAAuBA,YAAvB;AACAI,OAAOC,cAAP,CAAsBC,MAAtB,CAA6B,mBAA7B,EAAkDxF,gBAAlD","file":"ChannelsDBPlugin.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst polymer_element_js_1 = require(\"@polymer/polymer/polymer-element.js\");\r\nrequire(\"@polymer/polymer/lib/elements/dom-repeat.js\");\r\nrequire(\"bootstrap/dist/css/bootstrap.css\");\r\nclass ChannelsDBPlugin extends polymer_element_js_1.PolymerElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.shortResidueNames = {\r\n            ALA: \"A\",\r\n            ARG: \"R\",\r\n            ASN: \"N\",\r\n            ASP: \"D\",\r\n            CYS: \"C\",\r\n            GLN: \"Q\",\r\n            GLU: \"E\",\r\n            HIS: \"H\",\r\n            ILE: \"I\",\r\n            LEU: \"L\",\r\n            LYS: \"K\",\r\n            MET: \"M\",\r\n            PHE: \"F\",\r\n            PRO: \"P\",\r\n            SER: \"S\",\r\n            THR: \"T\",\r\n            TRP: \"W\",\r\n            TYR: \"Y\",\r\n            VAL: \"V\",\r\n        };\r\n        this.createSubtitle = function (channels) {\r\n            let subtitle = '';\r\n            switch (channels[0].Type) {\r\n                case 0:\r\n                    subtitle = \"Reviewed\";\r\n                    break;\r\n                case 1:\r\n                    subtitle = \"Transmembrane\";\r\n                    break;\r\n                case 2:\r\n                    subtitle = \"CSA\";\r\n                    break;\r\n                case 3:\r\n                    subtitle = \"Cof actor\";\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return `${subtitle} ${this.channelsToPlural()}`;\r\n        };\r\n    }\r\n    calculateLining(channel, backbone) {\r\n        let residueLining = channel.Layers.map(((x) => { return x.Residues; }));\r\n        let union = [].concat.apply([], residueLining);\r\n        let result = [];\r\n        if (backbone)\r\n            result = union.filter(function (x) { return x.Backbone; });\r\n        else\r\n            result = union.filter(function (x) { return x.SideChain; });\r\n        return this.liningResiduesString(result);\r\n    }\r\n    ;\r\n    liningResiduesString(residueLining) {\r\n        let lining = {};\r\n        let result = \"\";\r\n        let uniqueResidues = ChannelsDBPlugin.distinctBy(residueLining, function (x) { return x['SequenceNumber'] + x['Chain']; });\r\n        for (let i = 0; i < uniqueResidues.length; i++) {\r\n            let name = uniqueResidues[i]['Name'];\r\n            let value = this.getShortResidueName(name);\r\n            if (typeof lining[this.getShortResidueName(name)] == 'undefined') {\r\n                lining[this.getShortResidueName(name)] = 1;\r\n            }\r\n            else {\r\n                lining[this.getShortResidueName(name)] = lining[this.getShortResidueName(name)] + 1;\r\n            }\r\n        }\r\n        for (let key in lining) {\r\n            let value = lining[key];\r\n            result = value === 1 ? result + key + '-' : result + value + key + '-';\r\n        }\r\n        return result.substring(0, result.length - 1);\r\n    }\r\n    ;\r\n    getShortResidueName(name) {\r\n        let r = this.shortResidueNames[name];\r\n        if (!r)\r\n            return name;\r\n        return r;\r\n    }\r\n    ;\r\n    static distinctBy(data, key) {\r\n        let elements = {};\r\n        let result = [];\r\n        for (let v of data) {\r\n            let k = key(v);\r\n            if (!elements[k]) {\r\n                result.push(v);\r\n                elements[k] = true;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    channelsToPlural() {\r\n        return `channel${this.channelsJson.length > 0 ? 's' : ''}`;\r\n    }\r\n    connectedCallback() {\r\n        const request = new XMLHttpRequest();\r\n        let channels = [];\r\n        request.open('GET', `https://webchem.ncbr.muni.cz/API/ChannelsDB/Component/${this.pdbId}`, true);\r\n        request.onload = function (req) {\r\n            if (request.readyState == 4) {\r\n                if (request.status == 200) {\r\n                    channels = JSON.parse(request.response);\r\n                    callback();\r\n                }\r\n                else {\r\n                    console.error(request.statusText);\r\n                }\r\n            }\r\n        };\r\n        let callback = (() => {\r\n            this.channelsJson = channels;\r\n            ChannelsDBPlugin.channelsList = channels;\r\n            this.subtitle = this.createSubtitle(this.channelsJson);\r\n            this.imgSrc = `https://webchem.ncbr.muni.cz/API/ChannelsDB/Download/${this.pdbId}?type=png`;\r\n            super.connectedCallback();\r\n        });\r\n        request.send(null);\r\n    }\r\n    static get getChannelReview() {\r\n        return polymer_element_js_1.html `\n                        <!--<li ng-repeat=\"channel in channels\">-->\n                            <div>\n                                <div>#[[ $index + 1 ]]</div>\n                                <div>\n                                    <b>\n\t\t\t\t\t\t\t<span class=\"hint--bottom\" data-hint=\"Length of the channel [&#8491;].\">\n\t\t\t\t\t\t\t\tLength:\n\t\t\t\t\t\t\t</span>\n                                    </b>\n                                    {{channel.Length | number: 1}}&#8491;\n\n                                    <span class=\"channels-db-delimiter\">|</span>\n\n                                    <b>\n\t\t\t\t\t\t\t<span class=\"hint--bottom hint--large\" data-hint=\"Channel's hydropathy is an average hydropathy index assigned to the lining residues according to the Kyte and Doolitle.\">\n\t\t\t\t\t\t\t\tHPthy:\n\t\t\t\t\t\t\t</span>\n                                    </b>\n                                    {{channel.Properties.Hydropathy | number: 2}}\n\n                                    <span class=\"channels-db-delimiter\">|</span>\n                                    <b>\n\t\t\t\t\t\t\t<span class=\"hint--bottom hint--large\" data-hint=\"Charge is calculated as a sum of charged residues (Arg, Lys = +1; Asp, Glu = -1)\">\n\t\t\t\t\t\t\t\tCharge:\n\t\t\t\t\t\t\t</span>\n                                    </b>\n                                    {{channel.Properties.Charge > 0? '+': ''}}{{channel.Properties.Charge}}\n                                    <span style=\"float: right; font-weight: 200;\">{{channel.Name}}</span>\n                                </div>\n\n                            </div>\n\n                            <div class=\"channels-db-channel-body\">\n                                <!--<div style=\"background: #{{channel.Color}}\"></div>-->\n\n                                <div class=\"channels-db-channel-body-content\">\n                                    <div style=\"position: relative\">\n                                        <b>Bottleneck:</b>\n\n                                        <span class=\"hint--bottom\" data-hint=\"Channels's lowest profile: radius / length\">\n\t\t\t\t\t\t\t\t{{bottlenecks[$index].MinRadius | number: 1}} / {{(bottlenecks[$index].EndDistance - bottlenecks[$index].StartDistance) | number: 1}}\n\t\t\t\t\t\t\t</span>\n                                        <span class=\"channels-db-delimiter\">|</span>\n                                        <span class=\"hint--bottom\" data-hint=\"Hydropathy of the bottleneck.\">\n\t\t\t\t\t\t\t\t{{bottlenecks[$index].Properties.Hydropathy | number: 2}}\n\t\t\t\t\t\t\t</span>\n                                        <span class=\"channels-db-delimiter\">|</span>\n                                        <span class=\"hint--bottom\" data-hint=\"Formal charge of the bottleneck.\">\n\t\t\t\t\t\t\t\t{{channel.Properties.Charge > 0? '+': ''}}{{bottlenecks[$index].Properties.Charge}}\n\t\t\t\t\t\t\t</span>\n                                        <span class=\"channels-db-delimiter\">|</span>\n                                        <span class=\"hint--bottom\" data-hint=\"Bottleneck lining residues.\">\n\t\t\t\t\t\t\t\t{{liningResiduesString(bottlenecks[$index].Residues) | cut:true:10:' ...' }}\n\t\t\t\t\t\t\t</span>\n                                    </div>\n\n\n                                    <div>\n                                        <b>Lining:</b>\n                                        <span class=\"hint--top\" data-hint=\"Sidechain lining residues\">\n\t\t\t\t\t\t\t\t{{calculateLining(channel, false) | cut:true:200:'...' }}\n\t\t\t\t\t\t\t</span>\n                                        <!--<span ng-show=\"{{calculateLining(channel, true).length > 0}}\" class=\"channels-db-delimiter\">|</span>-->\n                                        <span class=\"hint--top\" data-hint=\"Backbone lining residues\">\n\t\t\t\t\t\t\t\t{{calculateLining(channel, true) | cut:true:200:'...' }}\n\t\t\t\t\t\t\t</span>\n\n\n\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"channels-db-channel-layers-wrapper\">\n\n                                <div class=\"hint--right hint--large\" data-hint=\"The channel is uniformly divided into layers, and each layer is defined by the residues lining it. A new layer starts whenever there is a change in the list of residues lining the channel along its length.\">\n                                    Layers\n                                </div>\n\n                                <div class=\"channels-db-channel-layers\">\n                                    <!--<div ng-repeat=\"layer in channel.wrappedLayers\"-->\n                                         style=\"width: {{ layer.computedWidth }}%; background-color:{{ layer.color }};\n\t\t\t\t\t\t\t\t\t border-bottom: {{layer.layer.LocalMinima ? '3px' : '0'}} solid {{layer.layer.Bottleneck ? 'black' : '\t#666666'}}\">\n\n                                        <div class=\"channels-db-channel-layer-info\">\n                                            <div style=\"left: 0;\" class=\"channels-db-channel-layer-info-unit\">\n                                                <div><small><b>Radius:</b> {{layer.layer.MinRadius | number: 1}}&#8491;</small></div>\n                                                <div><small><b>Length:</b> {{layer.layer.EndDistance - layer.layer.StartDistance | number: 1}}&#8491;</small></div>\n                                            </div>\n                                            <div style=\"left: 96px;\" class=\"channels-db-channel-layer-info-unit\">\n                                                <div><small><b>Hpthy:</b> {{layer.layer.Properties.Hydropathy | number: 2}}</small></div>\n                                                <div><small><b>Charge:</b> {{layer.layer.Properties.Charge > 0? '+': ''}}{{layer.layer.Properties.Charge}}</small></div>\n                                            </div>\n                                            <div class=\"channels-db-channel-layer-info-residues\">\n\t\t\t\t\t\t\t\t\t<!--<span ng-repeat=\"residue in layer.layer.Residues\">-->\n\t\t\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t\t\t\t<!--<small ng-if=\"residue.Backbone\">-->\n\t\t\t\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"hint--top\" data-hint=\"Backbone\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<!--\n\t\t\t\t\t\t\t\t\t\t\t\t\t-->\n\t\t\t\t\t\t\t\t\t\t\t\t\t{{residue.Name}} {{residue.SequenceNumber}}{{residue.Chain}}{{$last? '' : ' &ndash; '}}\n                                                    <!--\n                                                    -->\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\n                                                <!--\n                                                -->\n\t\t\t\t\t\t\t\t\t\t\t</b>\n                                            <!--\n                                            -->\n\t\t\t\t\t\t\t\t\t\t</small>\n                                        <!--\n                                        -->\n\t\t\t\t\t\t\t\t\t\t<!--<small ng-if=\"!residue.Backbone\">{{residue.Name}} {{residue.SequenceNumber}}{{residue.Chain}}{{$last? '' : ' &ndash; '}}</small>-->\n                                        <!--\n                                        -->\n\t\t\t\t\t\t\t\t\t</span>\n                                                <!--<div ng-show=\"{{layer.layer.Bottleneck}}\" class=\"channels-db-channel-layer-info-bottleneck\">Bottleneck</div>-->\n                                                <!--<div ng-show=\"{{layer.layer.LocalMinima && !layer.layer.Bottleneck}}\" class=\"channels-db-channel-layer-info-bottleneck\">Local minimum</div>-->\n                                            </div>\n                                            <div style=\"background: {{ layer.color }}\"></div>\n                                        </div>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </li>`;\r\n    }\r\n    static get properties() {\r\n        return {\r\n            pdbId: {\r\n                type: String,\r\n                reflectToAttribute: true,\r\n                notify: true,\r\n            }\r\n        };\r\n    }\r\n    static get template() {\r\n        // language=HTML\r\n        return polymer_element_js_1.html `\n            <style>\n                @import url( ../public/style.css )\n            </style>\n            <div class=\"channels-db-header\">\n            <span>\n                <span class=\"channels-db-id\">[[pdbId]] | <small>[[channelsJson.length]] [[subtitle]]</small> &nbsp;&nbsp;&mdash;&nbsp;&nbsp;</span>ChannelsDB\n                <span style=\"float:right;\"><a href=\"https://webchemdev.ncbr.muni.cz/ChannelsDB/detail/[[pdbId]]\">[+ More]</a></span>\n            </span>\n            </div>\n            <div class=\"channels-db-body\">\n                <div class=\"channels-db-left-pane\">\n                    <div class=\"channels-db-thumb channels-db-thumb-src\">\n                        <img src=\"{{imgSrc}}\">\n                    </div>\n                </div>\n\n                <div class=\"channels-db-right-pane\">\n                    <!--<div ng-show=\"isError\" class=\"channels-db-right-pane-error\">Error: {{error}}</div>-->\n\n                    <ul class=\"channels-db-list\">\n\n                        <template is=\"dom-repeat\" id=\"menu\" items=\"{{channelsJson}}\">\n                            <li>\n                                <div>\n                                    <div>#[[index]]</div>\n                                    <div>\n                                        <b>\n                                            <span class=\"hint--bottom\" data-hint=\"Length of the channel [&#8491;].\">\n                                                Length:\n                                            </span>\n                                        </b>{{item.Length}}&#8491;\n                                        <span class=\"channels-db-delimiter\">|</span>\n                                        <b>\n                                            <span class=\"hint--bottom hint--large\" \n                                                  data-hint=\"Channel's hydropathy is an average hydropathy index \n                                                  assigned to the lining residues according to the Kyte and Doolitle.\">\n                                            HPthy:\n                            </span>\n                            </b>\n                            {{item.Properties.Hydropathy}}\n\n                            <span class=\"channels-db-delimiter\">|</span>\n                            <b>\n                            <span class=\"hint--bottom hint--large\" data-hint=\"Charge is calculated as a sum of charged residues (Arg, Lys = +1; Asp, Glu = -1)\">\n                            Charge:\n                            </span>\n                            </b>\n                            {{item.Properties.Charge > 0? '+': ''}}{{item.Properties.Charge}}\n                            <span style=\"float: right; font-weight: 200;\">{{item.Name}}</span>\n                            </div>\n\n                            </div>\n\n                            <div class=\"channels-db-channel-body\">\n                            <!--<div style=\"background: #{{channel.Color}}\"></div>-->\n\n                            <div class=\"channels-db-channel-body-content\">\n                            <div style=\"position: relative\">\n                            <b>Bottleneck:</b>\n\n                            <span class=\"hint--bottom\" data-hint=\"Channels's lowest profile: radius / length\">\n                            {{bottlenecks[$index].MinRadius | number: 1}} / {{(bottlenecks[$index].EndDistance - bottlenecks[$index].StartDistance) | number: 1}}\n                            </span>\n                            <span class=\"channels-db-delimiter\">|</span>\n                            <span class=\"hint--bottom\" data-hint=\"Hydropathy of the bottleneck.\">\n                            {{bottlenecks[$index].Properties.Hydropathy | number: 2}}\n                            </span>\n                            <span class=\"channels-db-delimiter\">|</span>\n                            <span class=\"hint--bottom\" data-hint=\"Formal charge of the bottleneck.\">\n                            {{item.Properties.Charge > 0? '+': ''}}{{bottlenecks[$index].Properties.Charge}}\n                            </span>\n                            <span class=\"channels-db-delimiter\">|</span>\n                            <span class=\"hint--bottom\" data-hint=\"Bottleneck lining residues.\">\n                            {{liningResiduesString(bottlenecks[$index].Residues) | cut:true:10:' ...' }}\n                            </span>\n                            </div>\n\n\n                            <div>\n                            <b>Lining:</b>\n                            <span class=\"hint--top\" data-hint=\"Sidechain lining residues\">\n                            {{calculateLining(item, false) | cut:true:200:'...' }}\n                            </span>\n                            <!--<span ng-show=\"{{calculateLining(channel, true).length > 0}}\" class=\"channels-db-delimiter\">|</span>-->\n                            <span class=\"hint--top\" data-hint=\"Backbone lining residues\">\n                            {{calculateLining(item, true) | cut:true:200:'...' }}\n                            </span>\n\n\n\n                            </div>\n                            </div>\n                            </div>\n\n                            <div class=\"channels-db-channel-layers-wrapper\">\n\n                            <div class=\"hint--right hint--large\" data-hint=\"The channel is uniformly divided into layers, and each layer is defined by the residues lining it. A new layer starts whenever there is a change in the list of residues lining the channel along its length.\">\n                            Layers\n                            </div>\n\n                            <div class=\"channels-db-channel-layers\">\n                            <!--<div ng-repeat=\"layer in channel.wrappedLayers\"-->\n                            style=\"width: {{ layer.computedWidth }}%; background-color:{{ layer.color }};\n                            border-bottom: {{layer.layer.LocalMinima ? '3px' : '0'}} solid {{layer.layer.Bottleneck ? 'black' : '\t#666666'}}\">\n\n                            <div class=\"channels-db-channel-layer-info\">\n                            <div style=\"left: 0;\" class=\"channels-db-channel-layer-info-unit\">\n                            <div><small><b>Radius:</b> {{layer.layer.MinRadius | number: 1}}&#8491;</small></div>\n                            <div><small><b>Length:</b> {{layer.layer.EndDistance - layer.layer.StartDistance | number: 1}}&#8491;</small></div>\n                            </div>\n                            <div style=\"left: 96px;\" class=\"channels-db-channel-layer-info-unit\">\n                            <div><small><b>Hpthy:</b> {{layer.layer.Properties.Hydropathy | number: 2}}</small></div>\n                            <div><small><b>Charge:</b> {{layer.layer.Properties.Charge > 0? '+': ''}}{{layer.layer.Properties.Charge}}</small></div>\n                            </div>\n                            <div class=\"channels-db-channel-layer-info-residues\">\n                            <!--<span ng-repeat=\"residue in layer.layer.Residues\">-->\n                            <!--\n                            -->\n                            <!--<small ng-if=\"residue.Backbone\">-->\n                            <!--\n                            -->\n                            <b>\n                            <!--\n                            -->\n                            <span class=\"hint--top\" data-hint=\"Backbone\">\n                            <!--\n                            -->\n                            {{residue.Name}} {{residue.SequenceNumber}}{{residue.Chain}}{{$last? '' : ' &ndash; '}}\n                            <!--\n                            -->\n                            </span>\n                            <!--\n                            -->\n                            </b>\n                            <!--\n                            -->\n                            </small>\n                            <!--\n                            -->\n                            <!--<small ng-if=\"!residue.Backbone\">{{residue.Name}} {{residue.SequenceNumber}}{{residue.Chain}}{{$last? '' : ' &ndash; '}}</small>-->\n                            <!--\n                            -->\n                            </span>\n                            <!--<div ng-show=\"{{layer.layer.Bottleneck}}\" class=\"channels-db-channel-layer-info-bottleneck\">Bottleneck</div>-->\n                            <!--<div ng-show=\"{{layer.layer.LocalMinima && !layer.layer.Bottleneck}}\" class=\"channels-db-channel-layer-info-bottleneck\">Local minimum</div>-->\n                            </div>\n                            <div style=\"background: {{ layer.color }}\"></div>\n                            </div>\n\n                            </div>\n                            </div>\n                            </div>\n                            </li>\n                        </template>\n                    </ul>\n                </div>\n\n            </div>\n\n            <div class=\"channels-db-footer\">\n                <span class=\"channels-db-powered\">powered by <a target=\"_blank\" href=\"http://mole.chemi.muni.cz\">MOLE 2.5</a></span>\n                <!--<a target=\"_blank\" href=\"{{link}}\">[+ Custom analysis]</a>-->\n            </div>\n        `;\r\n    }\r\n}\r\nclass LayerWrapper {\r\n    constructor(computedWidth, color, layer) {\r\n        this.computedWidth = computedWidth;\r\n        this.color = color;\r\n        this.layer = layer;\r\n    }\r\n}\r\nexports.LayerWrapper = LayerWrapper;\r\nwindow.customElements.define('channelsdb-plugin', ChannelsDBPlugin);\r\n"]}